/* Copyright (C) 2014-2016 by Jacob Alexander
 *
 * This file is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This file is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this file.  If not, see <http://www.gnu.org/licenses/>.
 */

// This file was generated by the kll compiler, DO NOT EDIT.
// Generation Date:    2016-07-11
// KLL Backend:        kiibohd
// KLL Git Rev:        6135cbb8329eff480c4100a1b46557f690ea604b
// KLL Git Changes:
//    .gitignore
//    LICENSE
//    README.markdown
//    backends/__init__.py
//    backends/kiibohd.py
//    examples/capabilitiesExample.kll
//    examples/colemak.kll
//    examples/defaultMapExample.kll
//    examples/example.kll
//    examples/hhkbpro2.kll
//    examples/md1Map.kll
//    examples/simple1.kll
//    examples/simple2.kll
//    examples/simpleExample.kll
//    funcparserlib/__init__.py
//    funcparserlib/lexer.py
//    funcparserlib/parser.py
//    funcparserlib/util.py
//    kll.py
//    kll_lib/__init__.py
//    kll_lib/backends.py
//    kll_lib/containers.py
//    kll_lib/hid_dict.py
//    layouts/colemak.kll
//    layouts/hhkbpro2.kll
//    layouts/iced_func.kll
//    layouts/iced_numpad.kll
//    layouts/kishsaver_unix1.kll
//    layouts/lcdFuncMap.kll
//    layouts/md1Action.kll
//    layouts/md1Overlay.kll
//    layouts/mdergo1Overlay.kll
//    layouts/mouseTest.kll
//    layouts/remote_reload.kll
//    layouts/stdFuncMap.kll
//    layouts/whitefox.kll
//    templates/kiibohdDefs.h
//    templates/kiibohdKeymap.h
// Compiler arguments:
//    ../../kll/kll.py
//      /home/shamus/Desktop/controller/Scan/MatrixARM/capabilities.kll
//      /home/shamus/Desktop/controller/Macro/PartialMap/capabilities.kll
//      /home/shamus/Desktop/controller/Output/pjrcUSB/capabilities.kll
//      /home/shamus/Desktop/controller/Scan/softhruf/defaultMap.kll
//      -d
//      /home/shamus/Desktop/controller/kll/layouts/dvorak.kll
//      /home/shamus/Desktop/controller/kll/layouts/stdFuncMap.kll
//      -p
//      /home/shamus/Desktop/controller/kll/layouts/plover.kll
//      /home/shamus/Desktop/controller/kll/layouts/stdFuncMap.kll
//      -p
//      /home/shamus/Desktop/controller/kll/layouts/lower.kll
//      /home/shamus/Desktop/controller/kll/layouts/stdFuncMap.kll
//      -p
//      /home/shamus/Desktop/controller/kll/layouts/raise.kll
//      /home/shamus/Desktop/controller/kll/layouts/stdFuncMap.kll
//    --backend
//      kiibohd
//    --templates
//      /home/shamus/Desktop/controller/kll/templates/kiibohdKeymap.h
//      /home/shamus/Desktop/controller/kll/templates/kiibohdDefs.h
//    --outputs
//      generatedKeymap.h
//      kll_defs.h
//
// - Base Layer -
//    MatrixArmCapabilities
//      /home/shamus/Desktop/controller/Scan/MatrixARM/capabilities.kll
//    PartialMapCapabilities
//      /home/shamus/Desktop/controller/Macro/PartialMap/capabilities.kll
//    pjrcUSBCapabilities
//      /home/shamus/Desktop/controller/Output/pjrcUSB/capabilities.kll
//    MD1
//      /home/shamus/Desktop/controller/Scan/softhruf/defaultMap.kll
// - Default Layer -
//    SOFT/HRUFDvorakLayer
//      /home/shamus/Desktop/controller/kll/layouts/dvorak.kll
//    stdFuncMap
//      /home/shamus/Desktop/controller/kll/layouts/stdFuncMap.kll
// - Partial Layers -
//    Layer 1
//     SOFT/HRUFPloverLayer
//       /home/shamus/Desktop/controller/kll/layouts/plover.kll
//     stdFuncMap
//       /home/shamus/Desktop/controller/kll/layouts/stdFuncMap.kll
//    Layer 2
//     SOFT/HRUFLowerLayer
//       /home/shamus/Desktop/controller/kll/layouts/lower.kll
//     stdFuncMap
//       /home/shamus/Desktop/controller/kll/layouts/stdFuncMap.kll
//    Layer 3
//     SOFT/HRUFRaiseLayer
//       /home/shamus/Desktop/controller/kll/layouts/raise.kll
//     stdFuncMap
//       /home/shamus/Desktop/controller/kll/layouts/stdFuncMap.kll



#pragma once

// ----- Enums -----

// Capability Indices
typedef enum CapabilityIndex {
	CustomAction_action1_capability_index,
	CustomAction_blockHold_capability_index,
	CustomAction_blockKey_capability_index,
	Macro_layerLatch_capability_index,
	Macro_layerLock_capability_index,
	Macro_layerRotate_capability_index,
	Macro_layerShift_capability_index,
	Macro_layerState_capability_index,
	Output_consCtrlSend_capability_index,
	Output_flashMode_capability_index,
	Output_kbdProtocolBoot_capability_index,
	Output_kbdProtocolNKRO_capability_index,
	Output_noneSend_capability_index,
	Output_sysCtrlSend_capability_index,
	Output_toggleKbdProtocol_capability_index,
	Output_usbCodeSend_capability_index,
	Output_usbMouse_capability_index,
} CapabilityIndex;



// ----- KLL Variables -----




// ----- Defines -----

// -- Interconnect Node Maximum --
#define InterconnectNodeMax 0x1



#define DebounceThrottleDiv_define 0
#define USBProtocol_define 1
#define enableJoystick_define 0
#define StateWordSize_define 8
#define enableMouse_define 1
#define enableUSBLowPowerNegotiation_define 0
#define flashModeEnabled_define 0
#define DebounceDivThreshold_define 65535
#define enableUSBResume_define 1
#define enableUSBSuspend_define 1
#define enableDeviceRestartOnUSBTimeout_define 0
#define enableKeyboard_define 1
#define enableVirtualSerialPort_define 1
#define enableRawIO_define 0
#define MinDebounceTime_define 5
#define KeyboardLocale_define 0
#define IndexWordSize_define 16
#define CapabilitiesNum_KLL 17
#define ResultMacroNum_KLL 90
#define TriggerMacroNum_KLL 147
#define LayerNum_KLL 4

